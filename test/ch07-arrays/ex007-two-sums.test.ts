import { twoSum, twoSum2, twoSum3 } from '@/src/ch07-arrays/ex007-two-sums'

describe('ex007-two-sums', () => {
    const cases: [[number[], number], number[]][] = [
        [
            [[2, 7, 11, 15], 9],
            [0, 1],
        ],
        [
            [[3, 2, 4], 6],
            [1, 2],
        ],
        [
            [[3, 3], 6],
            [0, 1],
        ],
        [
            [[-1, -2, -3, -4], -6],
            [1, 3],
        ],
        [
            [[1000, 2000, 3000, 5000], 8000],
            [2, 3],
        ],
        [
            [[22, 33, 44, 11], 55],
            [0, 1],
        ],
        [
            [[-5, 15, 20, 5], 0],
            [0, 3],
        ],
        [
            [[1, 5, 5, 6], 10],
            [1, 2],
        ],
        [
            [[0, 14, 0, 4], 0],
            [0, 2],
        ],
        [
            [[14, 3, 17, 8], 11],
            [1, 3],
        ],
        [
            [[5, 7, 8], 13],
            [0, 2],
        ],
        [
            [[-100, 100, 0, 50, -50], 0],
            [0, 1],
        ],
        [
            [[2, 2, 3, 3], 4],
            [0, 1],
        ],
        [
            [[-3, 1, 2, 4], 1],
            [0, 3],
        ],
        [
            [[10, 20, 30, 40, 60], 90],
            [2, 4],
        ],
        [
            [[-5, 95, 5, 100], 95],
            [0, 3],
        ],
        [
            [[21, 62, 93, 31], 52],
            [0, 3],
        ],
        [
            [[5, 20, 30, 5], 25],
            [0, 1],
        ],
        [
            [[15, 5, 0, 20, 25], 40],
            [0, 4],
        ],
        [
            [[-10, 20, -30, 40, 50], 10],
            [0, 1],
        ],
        [
            [[-(10 ** 9), 10 ** 9], 0],
            [0, 1],
        ],
        [
            [[10 ** 9, -(10 ** 9), 0], 10 ** 9],
            [0, 2],
        ],
        [
            [[-(10 ** 9), 10 ** 9, -(10 ** 8), 10 ** 7], 0],
            [0, 1],
        ],
        [
            [[10 ** 9, 10 ** 9, -(10 ** 9)], 2 * 10 ** 9],
            [0, 1],
        ],
        [
            [[10 ** 9, -(10 ** 9), 10 ** 9], 2 * 10 ** 9],
            [0, 2],
        ],
        [
            [[1, 1], 2],
            [0, 1],
        ],
        [
            [[10 ** 9, 10 ** 9], 2 * 10 ** 9],
            [0, 1],
        ],
        [
            [[-(10 ** 9), -(10 ** 9)], -2 * 10 ** 9],
            [0, 1],
        ],
        [
            [
                [
                    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                    18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                    33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
                    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
                    63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
                    93, 94, 95, 96, 97, 98, 99, 100,
                ],
                199,
            ],
            [98, 99],
        ],
        [
            [[-1, 1, 1, 1, 1, -1, 1, 1, 1, 1], -2],
            [0, 5],
        ],
    ]
    describe('twoSum', () => {
        test.each(cases)(
            '%s -> %s'.slice(0, 30),
            ([nums, target], expected) => {
                expect(twoSum(nums, target)).toStrictEqual(expected)
            }
        )
    })
    describe('twoSum2', () => {
        test.each(cases)(
            '%s -> %s'.slice(0, 30),
            ([nums, target], expected) => {
                expect(twoSum2(nums, target)).toStrictEqual(expected)
            }
        )
    })
    describe('twoSum3', () => {
        test.each(cases)(
            '%s -> %s'.slice(0, 30),
            ([nums, target], expected) => {
                expect(twoSum3(nums, target)).toStrictEqual(expected)
            }
        )
    })
})
